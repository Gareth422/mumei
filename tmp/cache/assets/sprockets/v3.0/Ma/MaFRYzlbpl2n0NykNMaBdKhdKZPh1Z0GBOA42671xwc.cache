I"4(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.ImageUpload = (function() {
    ImageUpload.prototype.uploaded = 0;

    ImageUpload.prototype.failed = 0;

    ImageUpload.prototype.waitingForUpload = false;

    ImageUpload.prototype.statusLabel = null;

    function ImageUpload(form) {
      this.form = form;
      this.updateStatus = bind(this.updateStatus, this);
      this.submitForm = bind(this.submitForm, this);
      this.setupFileInputField();
      this.setupForm();
      $(document).on("dragenter", function() {
        return $('.file-section').addClass('drag-over');
      });
    }

    ImageUpload.prototype.getInput = function() {
      return this.form.find('input[data-behavior~="upload"]');
    };

    ImageUpload.prototype.setupFileInputField = function() {
      var input;
      input = this.getInput();
      this.statusLabel = $('<div class="status"></div>').insertAfter(input);
      return input.fileupload({
        dataType: 'json',
        paramName: "images[]",
        dropZone: this.form.find(".file-section")
      }).bind('fileuploaddone', (function(_this) {
        return function(e, data) {
          var file, i, index, len, ref, results;
          ref = data.result.images;
          results = [];
          for (index = i = 0, len = ref.length; i < len; index = ++i) {
            file = ref[index];
            if (file.id !== null) {
              $("<input type='hidden' name='post[image_ids][]' value='" + file.id + "' />").insertAfter(_this.statusLabel);
              results.push(_this.uploaded += 1);
            } else {
              results.push(_this.failed += 1);
            }
          }
          return results;
        };
      })(this)).bind('fileuploadadd', this.updateStatus).bind('fileuploadalways', this.updateStatus).bind('fileuploadstop', this.updateStatus).bind('fileuploadstop', this.submitForm);
    };

    ImageUpload.prototype.setupForm = function() {
      return this.form.on('ajax:beforeSend', (function(_this) {
        return function() {
          if (_this.getInput().fileupload('active') > 0) {
            _this.waitingForUpload = true;
            return false;
          }
        };
      })(this));
    };

    ImageUpload.prototype.submitForm = function(e, data) {
      if (this.waitingForUpload && this.getInput().fileupload('active') === 0) {
        this.waitingForUpload = false;
        return this.form.submit();
      }
    };

    ImageUpload.prototype.updateStatus = function(e, data) {
      return this.statusLabel.html((this.getInput().fileupload('active')) + " uploading, " + this.uploaded + " uploaded, " + this.failed + " failed");
    };

    return ImageUpload;

  })();

  $(function() {
    return $('form').each(function() {
      return new ImageUpload($(this));
    });
  });

}).call(this);
:ET